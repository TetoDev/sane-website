// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model chipset {
  id                   Int      @id @default(autoincrement())
  name                 String
  brand                String   @default("nobrand")
  supportedgenerations String[]
  ddr4                 Int
  ddr5                 Int      @default(0)
  socket               socket   @relation(fields: [socketid], references: [id])
  socketid             Int
}

model socket {
  id       Int       @id @default(autoincrement())
  name     String
  chipsets chipset[]
}

model cpu {
  id         Int    @id @default(autoincrement())
  name       String
  price      Int    @default(0)
  socketid   Int
  score      Int    @default(0)
  generation String
  link       String
}

model gpu {
  id    Int    @id @default(autoincrement())
  name  String
  price Int    @default(0)
  bus   String
  vram  Int    @default(0)
  score Int    @default(0)
  link  String
}

model ram {
  id       Int     @id @default(autoincrement())
  name     String
  price    Int     @default(0)
  ddr5     Boolean @default(false)
  speed    Int     @default(0)
  dims     Int     @default(1)
  capacity Int     @default(0)
  link     String
}

model motherboard {
  id          Int     @id @default(autoincrement())
  name        String
  price       Int     @default(0)
  chipsetid   Int
  socketid    Int
  format      String
  memoryslots Int     @default(2)
  ddr5        Boolean @default(false)
  link        String
}

model hdd {
  id       Int    @id @default(autoincrement())
  name     String
  price    Int    @default(0)
  capacity Int    @default(0)
  link     String
}

model ssd {
  id       Int    @id @default(autoincrement())
  name     String
  price    Int    @default(0)
  capacity Int    @default(0)
  bus      String
  format   String
  link     String
}

model psu {
  id    Int    @id @default(autoincrement())
  name  String
  price Int    @default(0)
  power Int    @default(0)
  link  String
}

model tower {
  id           Int     @id @default(autoincrement())
  name         String
  price        Int     @default(0)
  size         String
  panel        String
  lighting     Boolean @default(false)
  includedfans Int     @default(0)
  link         String
}

model cooler {
  id    Int    @id @default(autoincrement())
  name  String
  price Int    @default(0)
  type  String
  size  String
  link  String
}

model fan {
  id    Int    @id @default(autoincrement())
  name  String
  price Int    @default(0)
  size  String
  link  String
}

model cpu_ranking {
  id    Int    @id @default(autoincrement())
  score Int    @default(0)
  name  String
}

model gpu_ranking {
  id    Int    @id @default(autoincrement())
  score Int    @default(0)
  name  String
}

model game {
  id       Int    @id @default(autoincrement())
  name     String
  reqcpuid Int
  reqgpuid Int
  reqram   Int    @default(8)
  storage  Int    @default(0)
  imglink  String
}

model user {
  id         Int     @id @default(autoincrement())
  name       String
  email      String  @unique
  phone      String
  adress     String
  postalcode String
  orders     order[]
}

model order {
  id            Int      @id @default(autoincrement())
  user          user     @relation(fields: [userid], references: [id])
  userid        Int
  cpuid         Int
  gpuid         Int
  ramid         Int
  motherboardid Int
  hddid         Int?
  ssdid         Int
  psuid         Int
  towerid       Int
  coolerid      Int?
  fanid         Int?
  createdAt     DateTime @default(now())
  status        String   @default("pending")
}

model issue {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String
  issue     String
  createdAt DateTime @default(now())
  status    String   @default("pending")
}

model status {
  id        Int      @id @default(autoincrement())
  status    String
  createdAt DateTime @default(now())
}
